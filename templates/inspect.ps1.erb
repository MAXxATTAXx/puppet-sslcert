$pfx = new-object System.Security.Cryptography.X509Certificates.X509Certificate2Collection

$location = @'
<%= @location %>
'@
$name = @'
<%= @name %>
'@
$root_store = @'
<%= @root_store %>
'@
$store_dir = @'
<%= @store_dir %>
'@
$password = @'
<%= @password %>
'@
$thumbprint = @'
<%= @thumbprint %>
'@

$certificate = gi $location\$name
switch -regex ($certificate.Extension.ToUpper()) {
    ".CER|.DER" {
        $pfx.import("$location\\$name","$password","Exportable,PersistKeySet")
    }
    ".CRT" {
        $pfx.Import([System.IO.File]::ReadAllBytes("$location\\$name"))
    }
    ".P7B|.SST" {
        $pfx.Import([System.IO.File]::ReadAllBytes("$location\\$name"))
    }
    ".PFX" {
        $pfx.import("$location\\$name","$password","Exportable,PersistKeySet")
    }
}


$installedCerts = @(Get-ChildItem -R cert:\$root_store\$store_dir)
$intermediateCerts = @(Get-ChildItem -R cert:\$root_store\CA)

$installedCertCount = 0
$installedIntermediateCount = 0


if (($pfx -ne $null) -and ($installedCerts -ne $null) -and ($intermediateCerts -ne $null)) {
    foreach($cert in $pfx)
    {
        if($cert.Thumbprint -ne "$thumbprint") {
            foreach ($intermediate in $intermediateCerts) {
                if($intermediate.Thumbprint -eq $cert.Thumbprint) {
                    $installedIntermediateCount ++
                }
            }
        }
        elseif ($cert.Thumbprint -eq "$thumbprint") {
            foreach ($installedCert in $installedCerts) {
                if($installedCert.Thumbprint -eq $cert.Thumbprint) {
                    $installedCertCount ++
                }
            }
        }
        else {
            exit 0
        }
    }

    if (($installedCertCount + $installedIntermediateCount) -eq $pfx.Count) {
        exit 1
    }
    else {
        exit 0
    }
}
else {
    exit 0
}

